/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  RepricingRule as PrismaRepricingRule,
  Product as PrismaProduct,
} from "@prisma/client";

export class RepricingRuleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.RepricingRuleCountArgs, "select">
  ): Promise<number> {
    return this.prisma.repricingRule.count(args);
  }

  async repricingRules(
    args: Prisma.RepricingRuleFindManyArgs
  ): Promise<PrismaRepricingRule[]> {
    return this.prisma.repricingRule.findMany(args);
  }
  async repricingRule(
    args: Prisma.RepricingRuleFindUniqueArgs
  ): Promise<PrismaRepricingRule | null> {
    return this.prisma.repricingRule.findUnique(args);
  }
  async createRepricingRule(
    args: Prisma.RepricingRuleCreateArgs
  ): Promise<PrismaRepricingRule> {
    return this.prisma.repricingRule.create(args);
  }
  async updateRepricingRule(
    args: Prisma.RepricingRuleUpdateArgs
  ): Promise<PrismaRepricingRule> {
    return this.prisma.repricingRule.update(args);
  }
  async deleteRepricingRule(
    args: Prisma.RepricingRuleDeleteArgs
  ): Promise<PrismaRepricingRule> {
    return this.prisma.repricingRule.delete(args);
  }

  async getProduct(parentId: string): Promise<PrismaProduct | null> {
    return this.prisma.repricingRule
      .findUnique({
        where: { id: parentId },
      })
      .product();
  }
}
