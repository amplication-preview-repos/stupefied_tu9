syntax = "proto3";

                 package product;
service ProductService {
 rpc createProduct (ProductCreateInput) returns (Product) {}
rpc products (findManyParams) returns (stream Product) {}
rpc product (ProductWhereUniqueInput) returns (Product) {}
rpc updateProduct (ProductUpdateInput) returns (Product) {}
rpc deleteProduct (ProductWhereUniqueInput) returns (Product) {}
rpc findManyProduct (ProductWhereUniqueInput) returns (stream Competitor) {}
rpc updateProduct (CompetitorParams) returns (stream Competitor) {}
rpc connectProduct (CompetitorParams) returns (Competitor) {}
rpc disconnectProduct (CompetitorParams) returns (Competitor) {}
rpc findManyProduct (ProductWhereUniqueInput) returns (stream PerformanceReport) {}
rpc updateProduct (PerformanceReportParams) returns (stream PerformanceReport) {}
rpc connectProduct (PerformanceReportParams) returns (PerformanceReport) {}
rpc disconnectProduct (PerformanceReportParams) returns (PerformanceReport) {}
rpc findManyProduct (ProductWhereUniqueInput) returns (stream RepricingRule) {}
rpc updateProduct (RepricingRuleParams) returns (stream RepricingRule) {}
rpc connectProduct (RepricingRuleParams) returns (RepricingRule) {}
rpc disconnectProduct (RepricingRuleParams) returns (RepricingRule) {} 
 }
message ProductCreateInput {
bool buyBoxStatus = 1;
repeated Competitor competitors = 2;
string createdAt = 3;
int32 currentPrice = 4;
string id = 5;
string name = 6;
repeated PerformanceReport performanceReports = 7;
repeated RepricingRule repricingRules = 8;
int32 stockLevel = 9;
string updatedAt = 10;
};
message Product {
bool buyBoxStatus = 1;
repeated Competitor competitors = 2;
string createdAt = 3;
int32 currentPrice = 4;
string id = 5;
string name = 6;
repeated PerformanceReport performanceReports = 7;
repeated RepricingRule repricingRules = 8;
int32 stockLevel = 9;
string updatedAt = 10;
};
message ProductWhereUniqueInput {
bool buyBoxStatus = 1;
repeated Competitor competitors = 2;
string createdAt = 3;
int32 currentPrice = 4;
string id = 5;
string name = 6;
repeated PerformanceReport performanceReports = 7;
repeated RepricingRule repricingRules = 8;
int32 stockLevel = 9;
string updatedAt = 10;
};
message ProductUpdateInput {
bool buyBoxStatus = 1;
repeated Competitor competitors = 2;
string createdAt = 3;
int32 currentPrice = 4;
string id = 5;
string name = 6;
repeated PerformanceReport performanceReports = 7;
repeated RepricingRule repricingRules = 8;
int32 stockLevel = 9;
string updatedAt = 10;
};
message findManyParams {

};
message Competitor {
int32 competitorPrice = 1;
string createdAt = 2;
string id = 3;
string marketCondition = 4;
string updatedAt = 5;
};
message CompetitorWhereUniqueInput {
int32 competitorPrice = 1;
string createdAt = 2;
string id = 3;
string marketCondition = 4;
string updatedAt = 5;
};
message CompetitorParams {
ProductWhereUniqueInput productWhereUniqueInput = 1;
CompetitorWhereUniqueInput competitorWhereUniqueInput = 2;
};
message PerformanceReport {
string competitorAnalysis = 1;
string createdAt = 2;
string id = 3;
string pricingHistory = 4;
int32 sales = 5;
string updatedAt = 6;
};
message PerformanceReportWhereUniqueInput {
string competitorAnalysis = 1;
string createdAt = 2;
string id = 3;
string pricingHistory = 4;
int32 sales = 5;
string updatedAt = 6;
};
message PerformanceReportParams {
ProductWhereUniqueInput productWhereUniqueInput = 1;
PerformanceReportWhereUniqueInput performancereportWhereUniqueInput = 2;
};
message RepricingRule {
string createdAt = 1;
string id = 2;
int32 maximumPrice = 3;
int32 minimumPrice = 4;
string ruleDescription = 5;
int32 targetProfitMargin = 6;
string updatedAt = 7;
};
message RepricingRuleWhereUniqueInput {
string createdAt = 1;
string id = 2;
int32 maximumPrice = 3;
int32 minimumPrice = 4;
string ruleDescription = 5;
int32 targetProfitMargin = 6;
string updatedAt = 7;
};
message RepricingRuleParams {
ProductWhereUniqueInput productWhereUniqueInput = 1;
RepricingRuleWhereUniqueInput repricingruleWhereUniqueInput = 2;
};